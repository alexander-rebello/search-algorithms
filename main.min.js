const algorithms={linear:{name:"üîç Linear Search",info:{how:"Checks each element in the array sequentially until the target is found or the end is reached.",pros:"Simple, works on unsorted arrays.",cons:"Slow for large arrays (O(n))."},*search(e,t){let r=0;for(let n=0;n<e.length;n++)if(r++,yield{arr:e.slice(),comparing:[n],comparisons:r,found:e[n]===t,index:n},e[n]===t)return yield{arr:e.slice(),found:!0,index:n,comparisons:r};yield{arr:e.slice(),found:!1,index:-1,comparisons:r}}},binary:{name:"‚ö° Binary Search",info:{how:"Repeatedly divides the sorted array in half, comparing the target to the middle element.",pros:"Very fast (O(log n)), but requires sorted array.",cons:"Only works on sorted arrays."},*search(e,t){let r=0,n=e.length-1,a=0;for(;r<=n;){let i=Math.floor((r+n)/2);if(a++,yield{arr:e.slice(),comparing:[i],comparisons:a,found:e[i]===t,index:i},e[i]===t)return yield{arr:e.slice(),found:!0,index:i,comparisons:a};e[i]<t?r=i+1:n=i-1}yield{arr:e.slice(),found:!1,index:-1,comparisons:a}}},jump:{name:"ü¶ò Jump Search",info:{how:"Checks elements at fixed intervals (blocks), then does linear search in the block where the target may be.",pros:"Faster than linear for sorted arrays (O(‚àön)).",cons:"Requires sorted array."},*search(e,t){let r=e.length,n=Math.floor(Math.sqrt(r)),a=0,i=0,o=n;for(;o<=r&&e[Math.min(o,r)-1]<t;)i++,yield{arr:e.slice(),comparing:[Math.min(o,r)-1],comparisons:i},a=o,o+=n;for(let n=a;n<Math.min(o,r);n++)if(i++,yield{arr:e.slice(),comparing:[n],comparisons:i},e[n]===t)return yield{arr:e.slice(),found:!0,index:n,comparisons:i};yield{arr:e.slice(),found:!1,index:-1,comparisons:i}}},interpolation:{name:"üìà Interpolation Search",info:{how:"Estimates the position of the target based on the value, like a smarter binary search. Works best on uniformly distributed sorted arrays.",pros:"O(log log n) for uniform data, faster than binary in best case.",cons:"Requires sorted, uniformly distributed array."},*search(e,t){let r=0,n=e.length-1,a=0;for(;r<=n&&t>=e[r]&&t<=e[n];){let i=r+Math.floor((n-r)/(e[n]-e[r]||1)*(t-e[r]));if(a++,yield{arr:e.slice(),comparing:[i],comparisons:a},e[i]===t)return yield{arr:e.slice(),found:!0,index:i,comparisons:a};e[i]<t?r=i+1:n=i-1}yield{arr:e.slice(),found:!1,index:-1,comparisons:a}}},exponential:{name:"üöÄ Exponential Search",info:{how:"Finds range by repeated doubling, then does binary search in that range.",pros:"O(log n), good for unbounded/infinite lists.",cons:"Requires sorted array."},*search(e,t){let r=e.length,n=0;if(0===r)return yield{arr:e.slice(),found:!1,index:-1,comparisons:n};if(e[0]===t)return yield{arr:e.slice(),found:!0,index:0,comparisons:1};let a=1;for(;a<r&&e[a]<=t;)n++,yield{arr:e.slice(),comparing:[a],comparisons:n},a*=2;let i=Math.floor(a/2),o=Math.min(a,r-1);for(;i<=o;){let r=Math.floor((i+o)/2);if(n++,yield{arr:e.slice(),comparing:[r],comparisons:n},e[r]===t)return yield{arr:e.slice(),found:!0,index:r,comparisons:n};e[r]<t?i=r+1:o=r-1}yield{arr:e.slice(),found:!1,index:-1,comparisons:n}}}};function renderSidebar(){const e=document.getElementById("algList");e.innerHTML="";Object.keys(algorithms).forEach((t=>{const r=algorithms[t],n=document.createElement("li"),a=document.createElement("button");a.className="alg-btn btn w-100 mb-2 "+(t===currentAlg?"btn-light":"btn-outline-light"),t===currentAlg&&a.classList.add("active"),a.dataset.alg=t,a.textContent=r.name,n.appendChild(a),e.appendChild(n)}))}let currentAlg=Object.keys(algorithms)[0],array=[],originalArray=[],sorting=!1,searchGen=null,animationId=null,speed=350,stats={comparisons:0,time:0,found:!1,index:-1},timerStart=0;const visualizer=document.getElementById("visualizer"),startBtn=document.getElementById("startBtn"),resetBtn=document.getElementById("resetBtn"),setArrayBtn=document.getElementById("setArrayBtn"),randomArrayBtn=document.getElementById("randomArrayBtn"),arrayInput=document.getElementById("arrayInput"),targetInput=document.getElementById("targetInput"),speedSlider=document.getElementById("speedSlider");speedSlider.value=speed;const speedValue=document.getElementById("speedValue");function getAlgBtns(){return document.querySelectorAll(".alg-btn")}function renderArray(e,t=[],r=-1,n=-1){visualizer.innerHTML="";const a=Math.max(...e,1);e.forEach(((e,i)=>{const o=document.createElement("div");o.className="bar default",o.style.height=e/a*90+10+"%",o.textContent=e,t&&t.includes(i)&&(o.classList.remove("default"),o.classList.add("comparing")),r===i&&(o.classList.remove("default"),o.classList.add("found")),n===i&&(o.classList.remove("default"),o.classList.add("notfound")),visualizer.appendChild(o)}))}function resetArray(){array=originalArray.slice(),renderArray(array),sorting=!1,startBtn.disabled=!1,stats={comparisons:0,time:0,found:!1,index:-1},updateStats()}function setArrayFromInput(){const e=arrayInput.value.trim();let t=document.getElementById("arrayInputError");if(t&&t.remove(),!e)return;let r=e.split(",").map((e=>parseInt(e,10))).filter((e=>!isNaN(e)));r.length<1||r.length>40?showArrayInputError("Array must have between 1 and 40 numbers."):r.some((e=>!Number.isFinite(e)))?showArrayInputError("All values must be valid numbers."):(r.sort(((e,t)=>e-t)),arrayInput.value=r.join(","),array=r,originalArray=r.slice(),renderArray(array),updateStats())}function showArrayInputError(e){let t=document.getElementById("arrayInputError");t||(t=document.createElement("div"),t.id="arrayInputError",t.className="text-danger mt-1",arrayInput.parentNode.appendChild(t)),t.textContent=e}function setRandomArray(){const e=Math.floor(11*Math.random())+20;if(array=Array.from({length:e},(()=>Math.floor(40*Math.random())+1)),array.sort(((e,t)=>e-t)),originalArray=array.slice(),arrayInput&&(arrayInput.value=array.join(",")),void 0!==targetInput&&targetInput&&array.length>0){const e=Math.floor(Math.random()*array.length);targetInput.value=array[e]}renderArray(array),updateStats()}function updateStats(){const e=(e,t)=>{const r=document.getElementById(e);r&&(r.textContent=t)};e("algTime",(stats.time?(stats.time/1e3).toFixed(2):"0.00")+"s"),e("algComparisons",stats.comparisons),e("algResult",stats.found?`Found at index ${stats.index}`:!1===stats.found&&-1===stats.index?"Not found":"-");const t=document.getElementById("algTitle");t&&(t.textContent=algorithms[currentAlg].name);let r=0,n=0;const a=array.length;if(algorithms[currentAlg]&&a>0)switch(currentAlg){case"linear":r=1,n=a;break;case"binary":r=1,n=Math.ceil(Math.log2(a))+1;break;case"jump":r=1,n=Math.ceil(Math.sqrt(a))+Math.ceil(Math.sqrt(a));break;case"interpolation":r=1,n=Math.ceil(Math.log2(a));break;case"exponential":r=1,n=Math.ceil(Math.log2(a))+1;break;default:r=1,n=a}e("algMinComparisons",r),e("algMaxComparisons",n)}setRandomArray(),renderSidebar(),setupEventListeners(),renderArray(array),renderAlgInfo(),updateStats();let timerInterval=null;function startLiveTimer(){timerInterval&&clearInterval(timerInterval),timerInterval=setInterval((()=>{if(sorting){stats.time=Date.now()-timerStart;const e=document.getElementById("algTime");e&&(e.textContent=(stats.time/1e3).toFixed(2)+"s")}}),60)}function stopLiveTimer(){timerInterval&&clearInterval(timerInterval)}function animateSearch(){if(!searchGen)return;const{value:e,done:t}=searchGen.next();e&&("comparisons"in e&&(stats.comparisons=e.comparisons),"found"in e&&(stats.found=e.found),"index"in e&&(stats.index=e.index),renderArray(e.arr,e.comparing||[],e.found?e.index:-1,!1===e.found&&void 0!==e.index?e.index:-1)),t?(sorting=!1,startBtn.disabled=!1,stopLiveTimer(),updateStats()):(animationId=setTimeout(animateSearch,speed),updateStats())}function setupEventListeners(){startBtn.onclick=()=>{if(sorting)return;sorting=!0,startBtn.disabled=!0,stats={comparisons:0,time:0,found:!1,index:-1},updateStats(),timerStart=Date.now();const e=parseInt(targetInput.value,10);if(isNaN(e))return showArrayInputError("Please enter a valid target value."),sorting=!1,void(startBtn.disabled=!1);searchGen=algorithms[currentAlg].search(array.slice(),e),startLiveTimer(),animateSearch()},resetBtn.onclick=()=>{animationId&&(clearTimeout(animationId),animationId=null),stopLiveTimer(),sorting=!1,startBtn.disabled=!1,resetArray()},setArrayBtn.onclick=()=>{setArrayFromInput()},randomArrayBtn.onclick=()=>{setRandomArray()},speedSlider.oninput=function(){speed=Number(this.value),speedValue.textContent=this.value+"ms",sorting&&(clearTimeout(animationId),animateSearch())},getAlgBtns().forEach((e=>{e.onclick=()=>{const t=e.dataset.alg;t!==currentAlg&&(currentAlg=t,animationId&&(clearTimeout(animationId),animationId=null),stopLiveTimer(),sorting=!1,startBtn.disabled=!1,resetArray(),renderAlgInfo(),getAlgBtns().forEach((e=>e.classList.remove("active"))),e.classList.add("active"))}}))}function renderAlgInfo(){const e=document.getElementById("algInfoContent"),t=algorithms[currentAlg];e&&t&&(t.info?e.innerHTML=`\n\t\t<div><b>How it works:</b><br>${t.info.how}</div>\n\t\t<div class="mt-2"><b>Pros:</b><br>${t.info.pros}</div>\n\t\t<div class="mt-2"><b>Cons:</b><br>${t.info.cons}</div>\n\t`:e.innerHTML="<em>No info available.</em>")}window.algorithms=algorithms,window.renderArray=renderArray,window.setRandomArray=setRandomArray,window.resetArray=resetArray,window.setArrayFromInput=setArrayFromInput;